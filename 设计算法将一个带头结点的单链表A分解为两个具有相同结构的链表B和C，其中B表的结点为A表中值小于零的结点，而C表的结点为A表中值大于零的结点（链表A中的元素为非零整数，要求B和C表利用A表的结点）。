
#include<stdlib.h>
#include<iostream>
#include<string>
using namespace std;
struct node {
	int data;
	struct node* next;
};

node* creat() {
	node* L = new node;
	if (!L) {
		cout << "创建失败creat";

	}
	L->next = NULL;
	return L;
}
//将输入依次插入到链表
node* insert(int n, node* L) {
	node* temp = new node;
	if (!temp)cout << "创建失败";
	temp->data = n;
	temp->next = L->next;
	L->next = temp;
	return L;
}
void printList(node* L) {
	node* head = L;
	head = head->next;
	if (head == NULL) {
		cout << "表中没有数据" << endl;
	}
	while (head != NULL) {
		cout << head->data << endl;
		head = head->next;
	}

}

void cmp0(node* L) {
	struct node* temp = L;
	if (temp == NULL) cout << "创建失败";
	struct node* p = L;
	if (p == NULL) cout << "创建失败";
	struct node* B = new node;
	if (B == NULL) cout << "创建失败";
	B->next = NULL;
	struct node* C = new node;
	if (C == NULL) cout << "创建失败";
	C->next = NULL;
	temp = temp->next;
	while (temp) {

		if (temp->data < 0) {
			p->next = temp->next;
			temp->next = B->next;
			B->next = temp;
			temp = p->next;
		}
		if (temp->data > 0) {
			p->next = temp->next;
			temp->next = C->next;
			C->next = temp;
			temp = p->next;
		}


	}
	cout << "B:" << endl;
	printList(B);
	cout << "C:" << endl;
	printList(C);


}
int a = -1;//为了输入0的时候不再添加链表内容
int main() {

	node* L = creat();
	while (a != 0) {
		cin >> a;
		if (a == 0) break;
		insert(a, L);

	}
	cmp0(L);
	//printList(L);
	cout << "A：" << endl;
	printList(L);
	return 0;
}
